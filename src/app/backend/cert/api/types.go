package api

import "crypto/tls"

const (
	// DashboardCertName is the certificate file names that will be generated by Dashboard
	DashboardCertName = "dashboard.crt"
	// DashboardKeyName is the key file names that will be generated by Dashboard
	DashboardKeyName = "dashboard.key"
)

// Manager is responsible for generating and storing self-signed certificates that can be used by Dashboard
// to serve over HTTPS.
type Manager interface {
	// GetCertificates loads existing certificates or generates self-signed certificates.
	GetCertificates() (tls.Certificate, error)
}

// Creator is responsible for preparing and generating certificates.
type Creator interface {
	// GenerateKey generates certificate key
	GenerateKey() interface{}
	// GenerateCertificate generates certificate
	GenerateCertificate(key interface{}) []byte
	// StoreCertificates saves certificates in a given path
	StoreCertificates(path string, key interface{}, certBytes []byte)
	// KeyCertPEMBytes converts the key and cert to PEM format
	KeyCertPEMBytes(key interface{}, certBytes []byte) (keyPEM []byte, certPEM []byte, err error)
	// GetKeyFileName returns certificate key file name
	GetKeyFileName() string
	// GetCertFileName returns certificate file name
	GetCertFileName() string
}
